/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'java-library'
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()

  maven {
    url = uri("https://repo.papermc.io/repository/maven-public/")
  }

  maven {
    url 'https://jitpack.io' 
  }

  maven {
    url = "https://repo.onarandombox.com/content/groups/public/" 
  }

}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

  // This dependency is exported to consumers, that is to say found on their compile classpath.
  api 'org.apache.commons:commons-math3:3.6.1'

  // This dependency is used internally, and not exposed to consumers on their own compile classpath.
  implementation 'com.google.guava:guava:31.1-jre'

  compileOnly("io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT")
  compileOnly('com.github.koca2000:NoteBlockAPI:-SNAPSHOT')
  compileOnly('com.onarandombox.multiversecore:Multiverse-Core:4.3.2-SNAPSHOT')
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}

gradle.projectsEvaluated {
  tasks.withType(JavaCompile){
    options.compilerArgs << "-Xlint:deprecation"
  }
}
